/*
* Copyright (c) 2007-2008 SlimDX Group
* 
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
* 
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
* THE SOFTWARE.
*/
#pragma once

#include <dwrite.h>

namespace SlimDX
{
	namespace DirectWrite
	{
		// NOTE: The enumerations defined in this file are in alphabetical order. When
		//       adding new enumerations or renaming existing ones, please make sure
		//       the ordering is maintained.

		public enum class FactoryType : System::Int32
		{
			Shared = DWRITE_FACTORY_TYPE_SHARED,
			Isolated = DWRITE_FACTORY_TYPE_ISOLATED
		};

		public enum class FontFeatureTag : System::Int32
		{
			AlternativeFractions = DWRITE_FONT_FEATURE_TAG_ALTERNATIVE_FRACTIONS,
			PetiteCapitalsFromCapitals = DWRITE_FONT_FEATURE_TAG_PETITE_CAPITALS_FROM_CAPITALS,
			SmallCapitalsFromCapitals = DWRITE_FONT_FEATURE_TAG_SMALL_CAPITALS_FROM_CAPITALS,
			ContextualAlternates = DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_ALTERNATES,
			CaseSensitiveForms = DWRITE_FONT_FEATURE_TAG_CASE_SENSITIVE_FORMS,
			GlyphComposition = DWRITE_FONT_FEATURE_TAG_GLYPH_COMPOSITION_DECOMPOSITION,
			ContextualLigatures = DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_LIGATURES,
			CapitalSpacing = DWRITE_FONT_FEATURE_TAG_CAPITAL_SPACING,
			ContextualSwash = DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_SWASH,
			CursivePositioning = DWRITE_FONT_FEATURE_TAG_CURSIVE_POSITIONING,
			DiscretionaryLigatures = DWRITE_FONT_FEATURE_TAG_DISCRETIONARY_LIGATURES,
			ExpertForms = DWRITE_FONT_FEATURE_TAG_EXPERT_FORMS,
			Fractions = DWRITE_FONT_FEATURE_TAG_FRACTIONS,
			FullWidth = DWRITE_FONT_FEATURE_TAG_FULL_WIDTH,
			HalfForms = DWRITE_FONT_FEATURE_TAG_HALF_FORMS,
			HalantForms = DWRITE_FONT_FEATURE_TAG_HALANT_FORMS,
			AlternateHalfWidth = DWRITE_FONT_FEATURE_TAG_ALTERNATE_HALF_WIDTH,
			HistoricalForms = DWRITE_FONT_FEATURE_TAG_HISTORICAL_FORMS,
			HorizontalKanaAlternates = DWRITE_FONT_FEATURE_TAG_HORIZONTAL_KANA_ALTERNATES,
			HistoricalLigatures = DWRITE_FONT_FEATURE_TAG_HISTORICAL_LIGATURES,
			HalfWidth = DWRITE_FONT_FEATURE_TAG_HALF_WIDTH,
			HojoKanjiForms = DWRITE_FONT_FEATURE_TAG_HOJO_KANJI_FORMS,
			JIS04Forms = DWRITE_FONT_FEATURE_TAG_JIS04_FORMS,
			JIS78Forms = DWRITE_FONT_FEATURE_TAG_JIS78_FORMS,
			JIS83Forms = DWRITE_FONT_FEATURE_TAG_JIS83_FORMS,
			JIS90Forms = DWRITE_FONT_FEATURE_TAG_JIS90_FORMS,
			Kerning = DWRITE_FONT_FEATURE_TAG_KERNING,
			StandardLigatures = DWRITE_FONT_FEATURE_TAG_STANDARD_LIGATURES,
			LiningFigures = DWRITE_FONT_FEATURE_TAG_LINING_FIGURES,
			LocalizedForms = DWRITE_FONT_FEATURE_TAG_LOCALIZED_FORMS,
			MarkPositioning = DWRITE_FONT_FEATURE_TAG_MARK_POSITIONING,
			MathematicalGreek = DWRITE_FONT_FEATURE_TAG_MATHEMATICAL_GREEK,
			MarkToMarkPositioning = DWRITE_FONT_FEATURE_TAG_MARK_TO_MARK_POSITIONING,
			AlternateAnnotationForms = DWRITE_FONT_FEATURE_TAG_ALTERNATE_ANNOTATION_FORMS,
			NlcKanjiForms = DWRITE_FONT_FEATURE_TAG_NLC_KANJI_FORMS,
			OldStyleFigures = DWRITE_FONT_FEATURE_TAG_OLD_STYLE_FIGURES,
			Ordinals = DWRITE_FONT_FEATURE_TAG_ORDINALS,
			ProportionalAlternateWidth = DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_ALTERNATE_WIDTH,
			PetiteCapitals = DWRITE_FONT_FEATURE_TAG_PETITE_CAPITALS,
			ProportionalFigures = DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_FIGURES,
			ProportionalWidths = DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_WIDTHS,
			QuarterWidths = DWRITE_FONT_FEATURE_TAG_QUARTER_WIDTHS,
			RequiredLigatures = DWRITE_FONT_FEATURE_TAG_REQUIRED_LIGATURES,
			RubyNotationForms = DWRITE_FONT_FEATURE_TAG_RUBY_NOTATION_FORMS,
			StylisticAlternates = DWRITE_FONT_FEATURE_TAG_STYLISTIC_ALTERNATES,
			ScientificInferiors = DWRITE_FONT_FEATURE_TAG_SCIENTIFIC_INFERIORS,
			SmallCapitals = DWRITE_FONT_FEATURE_TAG_SMALL_CAPITALS,
			SimplifiedForms = DWRITE_FONT_FEATURE_TAG_SIMPLIFIED_FORMS,
			StylisticSet1 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_1,
			StylisticSet2 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_2,
			StylisticSet3 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_3,
			StylisticSet4 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_4,
			StylisticSet5 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_5,
			StylisticSet6 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_6,
			StylisticSet7 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_7,
			StylisticSet8 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_8,
			StylisticSet9 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_9,
			StylisticSet10 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_10,
			StylisticSet11 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_11,
			StylisticSet12 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_12,
			StylisticSet13 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_13,
			StylisticSet14 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_14,
			StylisticSet15 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_15,
			StylisticSet16 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_16,
			StylisticSet17 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_17,
			StylisticSet18 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_18,
			StylisticSet19 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_19,
			StylisticSet20 = DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_20,
			Subscript = DWRITE_FONT_FEATURE_TAG_SUBSCRIPT,
			Superscript = DWRITE_FONT_FEATURE_TAG_SUPERSCRIPT,
			Swash = DWRITE_FONT_FEATURE_TAG_SWASH,
			Titling = DWRITE_FONT_FEATURE_TAG_TITLING,
			TraditionalNameForms = DWRITE_FONT_FEATURE_TAG_TRADITIONAL_NAME_FORMS,
			TabularFigures = DWRITE_FONT_FEATURE_TAG_TABULAR_FIGURES,
			TraditionalForms = DWRITE_FONT_FEATURE_TAG_TRADITIONAL_FORMS,
			ThirdWidths = DWRITE_FONT_FEATURE_TAG_THIRD_WIDTHS,
			Unicase = DWRITE_FONT_FEATURE_TAG_UNICASE,
			SlashedZero = DWRITE_FONT_FEATURE_TAG_SLASHED_ZERO
		};

		public enum class FontStretch : System::Int32
		{
			Undefined =  DWRITE_FONT_STRETCH_UNDEFINED,
			UltraCondensed =  DWRITE_FONT_STRETCH_ULTRA_CONDENSED,
			ExtraCondensed =  DWRITE_FONT_STRETCH_EXTRA_CONDENSED,
			Condensed =  DWRITE_FONT_STRETCH_CONDENSED,
			SemiCondensed =  DWRITE_FONT_STRETCH_SEMI_CONDENSED,
			Normal =  DWRITE_FONT_STRETCH_NORMAL,
			SemiExpanded =  DWRITE_FONT_STRETCH_SEMI_EXPANDED,
			Expanded =  DWRITE_FONT_STRETCH_EXPANDED,
			ExtraExpanded =  DWRITE_FONT_STRETCH_EXTRA_EXPANDED,
			UltraExpanded =  DWRITE_FONT_STRETCH_ULTRA_EXPANDED
		};

		public enum class FontStyle : System::Int32
		{
			Normal = DWRITE_FONT_STYLE_NORMAL,
			Oblique = DWRITE_FONT_STYLE_OBLIQUE,
			Italic = DWRITE_FONT_STYLE_ITALIC
		};

		public enum class FontWeight : System::Int32
		{
			Thin = DWRITE_FONT_WEIGHT_THIN,
			ExtraLight = DWRITE_FONT_WEIGHT_EXTRA_LIGHT,
			Light = DWRITE_FONT_WEIGHT_LIGHT,
			Normal = DWRITE_FONT_WEIGHT_NORMAL,
			Medium = DWRITE_FONT_WEIGHT_MEDIUM,
			SemiBold = DWRITE_FONT_WEIGHT_SEMI_BOLD,
			Bold = DWRITE_FONT_WEIGHT_BOLD,
			ExtraBold = DWRITE_FONT_WEIGHT_EXTRA_BOLD,
			Black = DWRITE_FONT_WEIGHT_BLACK,
			ExtraBlack = DWRITE_FONT_WEIGHT_EXTRA_BLACK
		};

		public enum class ParagraphAlignment : System::Int32
		{
			Near = DWRITE_PARAGRAPH_ALIGNMENT_NEAR,
			Far = DWRITE_PARAGRAPH_ALIGNMENT_FAR,
			Center = DWRITE_PARAGRAPH_ALIGNMENT_CENTER
		};

		public enum class TextAlignment : System::Int32
		{
			Leading = DWRITE_TEXT_ALIGNMENT_LEADING,
			Trailing = DWRITE_TEXT_ALIGNMENT_TRAILING,
			Center = DWRITE_TEXT_ALIGNMENT_CENTER
		};

		public enum class TextMeasuringMethod : System::Int32
		{
			UseIdealMetrics = DWRITE_TEXT_MEASURING_METHOD_USE_IDEAL_METRICS,
			UseDisplayCompatibleMetrics = DWRITE_TEXT_MEASURING_METHOD_USE_DISPLAY_COMPATIBLE_METRICS,
			UseDisplayNaturalMetrics = DWRITE_TEXT_MEASURING_METHOD_USE_DISPLAY_NATURAL_METRICS
		};
	}
}