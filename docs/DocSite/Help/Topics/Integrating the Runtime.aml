<?xml version="1.0" encoding="utf-8"?>
<topic id="a2beac1b-ae9d-4695-8520-5731221e8f60" revisionNumber="0">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
        The official SlimDX Runtime installer can be invoked from another installer, and supports silent and passive installation modes.
        (See <link xlink:href="2182dbe0-c28f-4efa-94a5-85e41db3947e">Installation</link> for more explanation.)
        Some developers may want to modify how the installation behaves.
        For example, if you never use Direct3D 10 and never target x64 machines, then the official installer carries several components you will never need.
        By stripping these components out, you can substantially reduce the size of the installer.
        The recommended approach for doing so is to integrate the runtime installer directly into your own installer, with the desired changes.
      </para>
    </introduction>

    <section>
      <title>Windows Installer Merge Modules</title>

      <content>
        <para>
          .NET allows you to create class library assemblies which can be referenced by other applications.
          <newTerm>Merge modules</newTerm> represent the same concept, applied to installation packages.
          The
          <externalLink>
            <linkText>WiX Manual</linkText>
            <linkUri>http://wix.sourceforge.net/manual-wix2/authoring_merge_modules.htm</linkUri>
          </externalLink>
          explains how to create and use merge modules with WiX, but any installation technology that generates MSI files should be able to use merge modules.
          By adding a merge module to your installer, all of the installation steps of that merge module are automatically included.
          This makes it a very useful way to add extra dependencies to your installer easily.
        </para>
        <para>
          The WiX script that ships with the SlimDX SDK is not a merge module, but a regular product.
          It can be converted to a merge module, but several changes must be made to the script.
          The top level Product tag must be changed to Module.
          It uses several elements that are not allowed in merge module scripts, such as Media and Feature.
          Instead of attempting to customize the script, it's recommended that you create a new merge module WiX script and copy the relevant pieces of the script.
          The pieces you're most likely interested in are the top level Directory tag and everything underneath it, the CustomAction tag, and the InstallExecuteSequence tag.
          Further customization of the Directory tag's contents may be necessary, depending on why exactly you are integrating the installer.
        </para>
        <para>
          We are planning to include a pre-built merge module eventually, but it is not currently available.
        </para>
      </content>
    </section>

    <section>
      <title>Installation and Uninstallation</title>

      <content>
        <para>
          Once you have integrated the SlimDX Runtime installer into your own installer, it no longer exists as a separate product.
          It will be installed with your product and uninstalled when your product is uninstalled.
          No entry for SlimDX will appear in the Windows program uninstallation list.
          This will not interfere with the official runtime or SDK installers, even if you are registering exactly the same assemblies that the official installers do.
          Windows Installer is capable of correctly referece counting these situations, and there is no need to attempt to detect or handle special cases.
        </para>
        <para>
          Note that this assumes you have not reused the SlimDX official product GUIDs.
          The SlimDX SDK includes a customized version of the runtime install script that has had the GUID stripped, and this version should be used as the basis for your installer.
          If you do happen to use the official script that is in our Subversion depot, it is critical that you do not duplicate the GUID for the Product tag.
          (It should not matter what you use for the Module tag in a merge module, but it's recommended you generate a new GUID anyway.)
          If you do happen to duplicate a product GUID, you are likely to experience major deployment bugs.
        </para>
        <para>
          Remember, even after following these instructions, it is critical to test installation and uninstallation.
        </para>
      </content>
    </section>
  </developerConceptualDocument>
</topic>