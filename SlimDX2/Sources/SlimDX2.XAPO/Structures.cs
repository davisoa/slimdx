// Copyright (c) 2007-2010 SlimDX Group
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     Structs for SlimDX2.XAPO namespace.
//     This code was generated by a tool.
//     Date : 11/14/2010 00:36:11
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;

namespace SlimDX2.XAPO {

    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>XAPO_REGISTRATION_PROPERTIES</unmanaged>
    public  partial struct RegistrationProperties {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>CLSID clsid</unmanaged>
        public Guid Clsid;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>wchar FriendlyName[256]</unmanaged>
        public string FriendlyName;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>wchar CopyrightInfo[256]</unmanaged>
        public string CopyrightInfo;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>UINT32 MajorVersion</unmanaged>
        public int MajorVersion;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>UINT32 MinorVersion</unmanaged>
        public int MinorVersion;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>UINT32 Flags</unmanaged>
        public SlimDX2.XAPO.PropertyFlags Flags;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>UINT32 MinInputBufferCount</unmanaged>
        public int MinInputBufferCount;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>UINT32 MaxInputBufferCount</unmanaged>
        public int MaxInputBufferCount;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>UINT32 MinOutputBufferCount</unmanaged>
        public int MinOutputBufferCount;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>UINT32 MaxOutputBufferCount</unmanaged>
        public int MaxOutputBufferCount;

        // Internal native struct used for marshalling
        [StructLayout(LayoutKind.Sequential, Pack = 1 )]
        internal unsafe partial struct __Native {	
            public Guid Clsid;
            public fixed char FriendlyName[256];
            public fixed char CopyrightInfo[256];
            public int MajorVersion;
            public int MinorVersion;
            public SlimDX2.XAPO.PropertyFlags Flags;
            public int MinInputBufferCount;
            public int MaxInputBufferCount;
            public int MinOutputBufferCount;
            public int MaxOutputBufferCount;
		    // Method to free native struct
            internal unsafe void __MarshalFree()
            {
            }
        }
		// Method to marshal from native to managed struct
        internal unsafe void __MarshalFrom(ref __Native @ref)
        {            
            this.Clsid = @ref.Clsid;
            fixed (char* __ptr = @ref.FriendlyName) this.FriendlyName = new string(__ptr, 0, 256);
            fixed (char* __ptr = @ref.CopyrightInfo) this.CopyrightInfo = new string(__ptr, 0, 256);
            this.MajorVersion = @ref.MajorVersion;
            this.MinorVersion = @ref.MinorVersion;
            this.Flags = @ref.Flags;
            this.MinInputBufferCount = @ref.MinInputBufferCount;
            this.MaxInputBufferCount = @ref.MaxInputBufferCount;
            this.MinOutputBufferCount = @ref.MinOutputBufferCount;
            this.MaxOutputBufferCount = @ref.MaxOutputBufferCount;
        }
        // Method to marshal from managed struct tot native
        internal unsafe void __MarshalTo(ref __Native @ref)
        {
            @ref.Clsid = this.Clsid;
            fixed (char* __psrc = this.FriendlyName) fixed (char* __ptr = @ref.FriendlyName) Utilities.CopyMemory((IntPtr)__ptr, (IntPtr)__psrc, FriendlyName.Length * 2);
            fixed (char* __psrc = this.CopyrightInfo) fixed (char* __ptr = @ref.CopyrightInfo) Utilities.CopyMemory((IntPtr)__ptr, (IntPtr)__psrc, CopyrightInfo.Length * 2);
            @ref.MajorVersion = this.MajorVersion;
            @ref.MinorVersion = this.MinorVersion;
            @ref.Flags = this.Flags;
            @ref.MinInputBufferCount = this.MinInputBufferCount;
            @ref.MaxInputBufferCount = this.MaxInputBufferCount;
            @ref.MinOutputBufferCount = this.MinOutputBufferCount;
            @ref.MaxOutputBufferCount = this.MaxOutputBufferCount;
		
		}
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>XAPO_LOCKFORPROCESS_PARAMETERS</unmanaged>
    public  partial struct LockParameters {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>const WAVEFORMATEX* pFormat</unmanaged>
        internal IntPtr FormatPointer;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>UINT32 MaxFrameCount</unmanaged>
        public int MaxFrameCount;

        // Internal native struct used for marshalling
        [StructLayout(LayoutKind.Sequential, Pack = 1 )]
        internal unsafe partial struct __Native {	
            public IntPtr FormatPointer;
            public int MaxFrameCount;
        }
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>XAPO_PROCESS_BUFFER_PARAMETERS</unmanaged>
    [StructLayout(LayoutKind.Sequential, Pack = 1 )]
    public  partial struct BufferParameters {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>void* pBuffer</unmanaged>
        public IntPtr Buffer;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>XAPO_BUFFER_FLAGS BufferFlags</unmanaged>
        public SlimDX2.XAPO.BufferFlags BufferFlags;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>UINT32 ValidFrameCount</unmanaged>
        public int ValidFrameCount;
    }
}
