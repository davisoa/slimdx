// Copyright (c) 2007-2010 SlimDX Group
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     Functions for SlimDX.DXGI namespace.
//     This code was generated by a tool.
//     Date : 11/16/2010 12:11:33
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace SlimDX.DXGI {


	/// <summary>
    /// DXGI Functions.
    /// </summary>
    static partial class DXGI {   
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <param name="riid">No documentation.</param>
        /// <param name="factoryRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT CreateDXGIFactory([None] GUID* riid,[Out] void** ppFactory)</unmanaged>
		public static SlimDX.Result CreateDXGIFactory(Guid riid, out IntPtr factoryRef) {
            unsafe {
                SlimDX.Result __result__;
                __result__= (SlimDX.Result)CreateDXGIFactory_(ref  riid, out factoryRef);
                __result__.CheckError();
                return __result__;
            }
        }
		
		/// <summary>Native Interop Function</summary>
        /// <unmanaged>HRESULT CreateDXGIFactory([None] GUID* riid,[Out] void** ppFactory)</unmanaged>
		[DllImport("dxgi.dll", EntryPoint = "CreateDXGIFactory", CallingConvention = CallingConvention.StdCall, PreserveSig = true), SuppressUnmanagedCodeSecurityAttribute]
		private extern static SlimDX.Result CreateDXGIFactory_(ref Guid riid, out IntPtr factoryRef);		
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <param name="riid">No documentation.</param>
        /// <param name="factoryRef">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>HRESULT CreateDXGIFactory1([None] GUID* riid,[Out] void** ppFactory)</unmanaged>
		public static SlimDX.Result CreateDXGIFactory1(Guid riid, out IntPtr factoryRef) {
            unsafe {
                SlimDX.Result __result__;
                __result__= (SlimDX.Result)CreateDXGIFactory1_(ref  riid, out factoryRef);
                __result__.CheckError();
                return __result__;
            }
        }
		
		/// <summary>Native Interop Function</summary>
        /// <unmanaged>HRESULT CreateDXGIFactory1([None] GUID* riid,[Out] void** ppFactory)</unmanaged>
		[DllImport("dxgi.dll", EntryPoint = "CreateDXGIFactory1", CallingConvention = CallingConvention.StdCall, PreserveSig = true), SuppressUnmanagedCodeSecurityAttribute]
		private extern static SlimDX.Result CreateDXGIFactory1_(ref Guid riid, out IntPtr factoryRef);		
    }
}