// Copyright (c) 2007-2010 SlimDX Group
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     Enums for SlimDX.DXGI namespace.
//     This code was generated by a tool.
//     Date : 11/16/2010 12:11:32
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;

namespace SlimDX.DXGI {

    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_RESIDENCY</unmanaged>
    public enum Residency : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_RESIDENCY_FULLY_RESIDENT</unmanaged>
        FullyResident = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_RESIDENCY_RESIDENT_IN_SHARED_MEMORY</unmanaged>
        ResidentInSharedMemory = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_RESIDENCY_EVICTED_TO_DISK</unmanaged>
        EvictedToDisk = unchecked((int)3),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_SWAP_EFFECT</unmanaged>
    public enum SwapEffect : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_SWAP_EFFECT_DISCARD</unmanaged>
        Discard = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_SWAP_EFFECT_SEQUENTIAL</unmanaged>
        Sequential = unchecked((int)1),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_SWAP_CHAIN_FLAG</unmanaged>
    [Flags]
    public enum SwapChainFlags : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_NONPREROTATED</unmanaged>
        Nonprerotated = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_ALLOW_MODE_SWITCH</unmanaged>
        AllowModeSwitch = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_SWAP_CHAIN_FLAG_GDI_COMPATIBLE</unmanaged>
        GdiCompatible = unchecked((int)4),			
        
        /// <summary>	
        /// None.	
        /// </summary>	
        /// <unmanaged>None</unmanaged>
        None = unchecked((int)0),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_ADAPTER_FLAG</unmanaged>
    [Flags]
    public enum AdapterFlags : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ADAPTER_FLAG_NONE</unmanaged>
        None = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ADAPTER_FLAG_REMOTE</unmanaged>
        Remote = unchecked((int)1),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_PRESENT_FLAGS</unmanaged>
    [Flags]
    public enum PresentFlags : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_PRESENT_TEST</unmanaged>
        Test = unchecked((int)0x00000001U),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_PRESENT_DO_NOT_SEQUENCE</unmanaged>
        DoNotSequence = unchecked((int)0x00000002U),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_PRESENT_RESTART</unmanaged>
        Restart = unchecked((int)0x00000004U),			
        
        /// <summary>	
        /// None.	
        /// </summary>	
        /// <unmanaged>None</unmanaged>
        None = unchecked((int)0),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_RESOURCE_PRIORITY</unmanaged>
    public enum ResourcePriority : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_RESOURCE_PRIORITY_MINIMUM</unmanaged>
        Minimum = unchecked((int)( 0x28000000 )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_RESOURCE_PRIORITY_LOW</unmanaged>
        Low = unchecked((int)( 0x50000000 )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_RESOURCE_PRIORITY_NORMAL</unmanaged>
        Normal = unchecked((int)( 0x78000000 )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_RESOURCE_PRIORITY_HIGH</unmanaged>
        High = unchecked((int)( 0xa0000000 )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_RESOURCE_PRIORITY_MAXIMUM</unmanaged>
        Maximum = unchecked((int)( 0xc8000000 )),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_MAP_FLAGS</unmanaged>
    [Flags]
    public enum MapFlags : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MAP_READ</unmanaged>
        Read = unchecked((int)( 1U )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MAP_WRITE</unmanaged>
        Write = unchecked((int)( 2U )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MAP_DISCARD</unmanaged>
        Discard = unchecked((int)( 4U )),			
        
        /// <summary>	
        /// None.	
        /// </summary>	
        /// <unmanaged>None</unmanaged>
        None = unchecked((int)0),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_ENUM_MODES_FLAGS</unmanaged>
    [Flags]
    public enum DisplayModeEnumerationFlags : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ENUM_MODES_INTERLACED</unmanaged>
        Interlaced = unchecked((int)( 1U )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ENUM_MODES_SCALING</unmanaged>
        Scaling = unchecked((int)( 2U )),			
        
        /// <summary>	
        /// None.	
        /// </summary>	
        /// <unmanaged>None</unmanaged>
        None = unchecked((int)0),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_MWA_FLAGS</unmanaged>
    [Flags]
    public enum WindowAssociationFlags : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MWA_NO_WINDOW_CHANGES</unmanaged>
        IgnoreAll = unchecked((int)( 1 << 0 )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MWA_NO_ALT_ENTER</unmanaged>
        IgnoreAltEnter = unchecked((int)( 1 << 1 )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MWA_NO_PRINT_SCREEN</unmanaged>
        IgnorePrintScreen = unchecked((int)( 1 << 2 )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MWA_VALID</unmanaged>
        Valid = unchecked((int)( 0x7 )),			
        
        /// <summary>	
        /// None.	
        /// </summary>	
        /// <unmanaged>None</unmanaged>
        None = unchecked((int)0),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_MODE_SCANLINE_ORDER</unmanaged>
    public enum DisplayModeScanlineOrder : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MODE_SCANLINE_ORDER_UNSPECIFIED</unmanaged>
        Unspecified = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MODE_SCANLINE_ORDER_PROGRESSIVE</unmanaged>
        Progressive = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MODE_SCANLINE_ORDER_UPPER_FIELD_FIRST</unmanaged>
        UpperFieldFirst = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MODE_SCANLINE_ORDER_LOWER_FIELD_FIRST</unmanaged>
        LowerFieldFirst = unchecked((int)3),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_MODE_SCALING</unmanaged>
    public enum DisplayModeScaling : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MODE_SCALING_UNSPECIFIED</unmanaged>
        Unspecified = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MODE_SCALING_CENTERED</unmanaged>
        Centered = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MODE_SCALING_STRETCHED</unmanaged>
        Stretched = unchecked((int)2),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_MODE_ROTATION</unmanaged>
    public enum DisplayModeRotation : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MODE_ROTATION_UNSPECIFIED</unmanaged>
        Unspecified = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MODE_ROTATION_IDENTITY</unmanaged>
        Identity = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MODE_ROTATION_ROTATE90</unmanaged>
        Rotate90 = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MODE_ROTATION_ROTATE180</unmanaged>
        Rotate180 = unchecked((int)3),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_MODE_ROTATION_ROTATE270</unmanaged>
        Rotate270 = unchecked((int)4),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_USAGE</unmanaged>
    public enum Usage : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_USAGE_SHADER_INPUT</unmanaged>
        ShaderInput = unchecked((int)( 1 << (0 + 4) )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_USAGE_RENDER_TARGET_OUTPUT</unmanaged>
        RenderTargetOutput = unchecked((int)( 1 << (1 + 4) )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_USAGE_BACK_BUFFER</unmanaged>
        BackBuffer = unchecked((int)( 1 << (2 + 4) )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_USAGE_SHARED</unmanaged>
        Shared = unchecked((int)( 1 << (3 + 4) )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_USAGE_READ_ONLY</unmanaged>
        ReadOnly = unchecked((int)( 1 << (4 + 4) )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_USAGE_DISCARD_ON_PRESENT</unmanaged>
        DiscardOnPresent = unchecked((int)( 1 << (5 + 4) )),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_USAGE_UNORDERED_ACCESS</unmanaged>
        UnorderedAccess = unchecked((int)( 1 << (6 + 4) )),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_ERROR</unmanaged>
    public enum DXGIError : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_INVALID_CALL</unmanaged>
        InvalidCall = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (1))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_NOT_FOUND</unmanaged>
        NotFound = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (2))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_MORE_DATA</unmanaged>
        MoreData = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (3))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_UNSUPPORTED</unmanaged>
        Unsupported = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (4))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_DEVICE_REMOVED</unmanaged>
        DeviceRemoved = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (5))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_DEVICE_HUNG</unmanaged>
        DeviceHung = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (6))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_DEVICE_RESET</unmanaged>
        DeviceReset = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (7))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_WAS_STILL_DRAWING</unmanaged>
        WasStillDrawing = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (10))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_FRAME_STATISTICS_DISJOINT</unmanaged>
        FrameStatisticsDisjoint = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (11))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE</unmanaged>
        GraphicsVidpnSourceInUse = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (12))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_DRIVER_INTERNAL_ERROR</unmanaged>
        DriverInternalError = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (32))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_NONEXCLUSIVE</unmanaged>
        Nonexclusive = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (33))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_NOT_CURRENTLY_AVAILABLE</unmanaged>
        NotCurrentlyAvailable = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (34))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_REMOTE_CLIENT_DISCONNECTED</unmanaged>
        RemoteClientDisconnected = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (35))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_ERROR_REMOTE_OUTOFMEMORY</unmanaged>
        RemoteOutofmemory = unchecked((int)(((1)<<31) | ((0x87a)<<16) | (36))),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_STATUS</unmanaged>
    public enum DXGIStatus : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_STATUS_OCCLUDED</unmanaged>
        Occluded = unchecked((int)(((0)<<31) | ((0x87a)<<16) | (1))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_STATUS_CLIPPED</unmanaged>
        Clipped = unchecked((int)(((0)<<31) | ((0x87a)<<16) | (2))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_STATUS_NO_REDIRECTION</unmanaged>
        NoRedirection = unchecked((int)(((0)<<31) | ((0x87a)<<16) | (4))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_STATUS_NO_DESKTOP_ACCESS</unmanaged>
        NoDesktopAccess = unchecked((int)(((0)<<31) | ((0x87a)<<16) | (5))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_STATUS_GRAPHICS_VIDPN_SOURCE_IN_USE</unmanaged>
        GraphicsVidpnSourceInUse = unchecked((int)(((0)<<31) | ((0x87a)<<16) | (6))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_STATUS_MODE_CHANGED</unmanaged>
        ModeChanged = unchecked((int)(((0)<<31) | ((0x87a)<<16) | (7))),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_STATUS_MODE_CHANGE_IN_PROGRESS</unmanaged>
        ModeChangeInProgress = unchecked((int)(((0)<<31) | ((0x87a)<<16) | (8))),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <unmanaged>DXGI_FORMAT</unmanaged>
    public enum Format : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_UNKNOWN</unmanaged>
        Unknown = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32G32B32A32_TYPELESS</unmanaged>
        R32G32B32A32_Typeless = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32G32B32A32_FLOAT</unmanaged>
        R32G32B32A32_Float = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32G32B32A32_UINT</unmanaged>
        R32G32B32A32_UInt = unchecked((int)3),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32G32B32A32_SINT</unmanaged>
        R32G32B32A32_SInt = unchecked((int)4),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32G32B32_TYPELESS</unmanaged>
        R32G32B32_Typeless = unchecked((int)5),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32G32B32_FLOAT</unmanaged>
        R32G32B32_Float = unchecked((int)6),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32G32B32_UINT</unmanaged>
        R32G32B32_UInt = unchecked((int)7),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32G32B32_SINT</unmanaged>
        R32G32B32_SInt = unchecked((int)8),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16G16B16A16_TYPELESS</unmanaged>
        R16G16B16A16_Typeless = unchecked((int)9),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16G16B16A16_FLOAT</unmanaged>
        R16G16B16A16_Float = unchecked((int)10),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16G16B16A16_UNORM</unmanaged>
        R16G16B16A16_UNorm = unchecked((int)11),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16G16B16A16_UINT</unmanaged>
        R16G16B16A16_UInt = unchecked((int)12),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16G16B16A16_SNORM</unmanaged>
        R16G16B16A16_SNorm = unchecked((int)13),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16G16B16A16_SINT</unmanaged>
        R16G16B16A16_SInt = unchecked((int)14),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32G32_TYPELESS</unmanaged>
        R32G32_Typeless = unchecked((int)15),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32G32_FLOAT</unmanaged>
        R32G32_Float = unchecked((int)16),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32G32_UINT</unmanaged>
        R32G32_UInt = unchecked((int)17),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32G32_SINT</unmanaged>
        R32G32_SInt = unchecked((int)18),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32G8X24_TYPELESS</unmanaged>
        R32G8X24_Typeless = unchecked((int)19),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_D32_FLOAT_S8X24_UINT</unmanaged>
        D32_Float_S8X24_UInt = unchecked((int)20),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS</unmanaged>
        R32_Float_X8X24_Typeless = unchecked((int)21),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_X32_TYPELESS_G8X24_UINT</unmanaged>
        X32_Typeless_G8X24_UInt = unchecked((int)22),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R10G10B10A2_TYPELESS</unmanaged>
        R10G10B10A2_Typeless = unchecked((int)23),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R10G10B10A2_UNORM</unmanaged>
        R10G10B10A2_UNorm = unchecked((int)24),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R10G10B10A2_UINT</unmanaged>
        R10G10B10A2_UInt = unchecked((int)25),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R11G11B10_FLOAT</unmanaged>
        R11G11B10_Float = unchecked((int)26),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8G8B8A8_TYPELESS</unmanaged>
        R8G8B8A8_Typeless = unchecked((int)27),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8G8B8A8_UNORM</unmanaged>
        R8G8B8A8_UNorm = unchecked((int)28),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8G8B8A8_UNORM_SRGB</unmanaged>
        R8G8B8A8_UNorm_SRgb = unchecked((int)29),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8G8B8A8_UINT</unmanaged>
        R8G8B8A8_UInt = unchecked((int)30),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8G8B8A8_SNORM</unmanaged>
        R8G8B8A8_SNorm = unchecked((int)31),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8G8B8A8_SINT</unmanaged>
        R8G8B8A8_SInt = unchecked((int)32),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16G16_TYPELESS</unmanaged>
        R16G16_Typeless = unchecked((int)33),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16G16_FLOAT</unmanaged>
        R16G16_Float = unchecked((int)34),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16G16_UNORM</unmanaged>
        R16G16_UNorm = unchecked((int)35),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16G16_UINT</unmanaged>
        R16G16_UInt = unchecked((int)36),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16G16_SNORM</unmanaged>
        R16G16_SNorm = unchecked((int)37),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16G16_SINT</unmanaged>
        R16G16_SInt = unchecked((int)38),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32_TYPELESS</unmanaged>
        R32_Typeless = unchecked((int)39),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_D32_FLOAT</unmanaged>
        D32_Float = unchecked((int)40),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32_FLOAT</unmanaged>
        R32_Float = unchecked((int)41),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32_UINT</unmanaged>
        R32_UInt = unchecked((int)42),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R32_SINT</unmanaged>
        R32_SInt = unchecked((int)43),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R24G8_TYPELESS</unmanaged>
        R24G8_Typeless = unchecked((int)44),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_D24_UNORM_S8_UINT</unmanaged>
        D24_UNorm_S8_UInt = unchecked((int)45),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R24_UNORM_X8_TYPELESS</unmanaged>
        R24_UNorm_X8_Typeless = unchecked((int)46),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_X24_TYPELESS_G8_UINT</unmanaged>
        X24_Typeless_G8_UInt = unchecked((int)47),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8G8_TYPELESS</unmanaged>
        R8G8_Typeless = unchecked((int)48),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8G8_UNORM</unmanaged>
        R8G8_UNorm = unchecked((int)49),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8G8_UINT</unmanaged>
        R8G8_UInt = unchecked((int)50),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8G8_SNORM</unmanaged>
        R8G8_SNorm = unchecked((int)51),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8G8_SINT</unmanaged>
        R8G8_SInt = unchecked((int)52),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16_TYPELESS</unmanaged>
        R16_Typeless = unchecked((int)53),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16_FLOAT</unmanaged>
        R16_Float = unchecked((int)54),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_D16_UNORM</unmanaged>
        D16_UNorm = unchecked((int)55),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16_UNORM</unmanaged>
        R16_UNorm = unchecked((int)56),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16_UINT</unmanaged>
        R16_UInt = unchecked((int)57),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16_SNORM</unmanaged>
        R16_SNorm = unchecked((int)58),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R16_SINT</unmanaged>
        R16_SInt = unchecked((int)59),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8_TYPELESS</unmanaged>
        R8_Typeless = unchecked((int)60),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8_UNORM</unmanaged>
        R8_UNorm = unchecked((int)61),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8_UINT</unmanaged>
        R8_UInt = unchecked((int)62),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8_SNORM</unmanaged>
        R8_SNorm = unchecked((int)63),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8_SINT</unmanaged>
        R8_SInt = unchecked((int)64),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_A8_UNORM</unmanaged>
        A8_UNorm = unchecked((int)65),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R1_UNORM</unmanaged>
        R1_UNorm = unchecked((int)66),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R9G9B9E5_SHAREDEXP</unmanaged>
        R9G9B9E5_Sharedexp = unchecked((int)67),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R8G8_B8G8_UNORM</unmanaged>
        R8G8_B8G8_UNorm = unchecked((int)68),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_G8R8_G8B8_UNORM</unmanaged>
        G8R8_G8B8_UNorm = unchecked((int)69),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC1_TYPELESS</unmanaged>
        BC1_Typeless = unchecked((int)70),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC1_UNORM</unmanaged>
        BC1_UNorm = unchecked((int)71),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC1_UNORM_SRGB</unmanaged>
        BC1_UNorm_SRgb = unchecked((int)72),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC2_TYPELESS</unmanaged>
        BC2_Typeless = unchecked((int)73),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC2_UNORM</unmanaged>
        BC2_UNorm = unchecked((int)74),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC2_UNORM_SRGB</unmanaged>
        BC2_UNorm_SRgb = unchecked((int)75),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC3_TYPELESS</unmanaged>
        BC3_Typeless = unchecked((int)76),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC3_UNORM</unmanaged>
        BC3_UNorm = unchecked((int)77),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC3_UNORM_SRGB</unmanaged>
        BC3_UNorm_SRgb = unchecked((int)78),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC4_TYPELESS</unmanaged>
        BC4_Typeless = unchecked((int)79),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC4_UNORM</unmanaged>
        BC4_UNorm = unchecked((int)80),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC4_SNORM</unmanaged>
        BC4_SNorm = unchecked((int)81),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC5_TYPELESS</unmanaged>
        BC5_Typeless = unchecked((int)82),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC5_UNORM</unmanaged>
        BC5_UNorm = unchecked((int)83),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC5_SNORM</unmanaged>
        BC5_SNorm = unchecked((int)84),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_B5G6R5_UNORM</unmanaged>
        B5G6R5_UNorm = unchecked((int)85),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_B5G5R5A1_UNORM</unmanaged>
        B5G5R5A1_UNorm = unchecked((int)86),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_B8G8R8A8_UNORM</unmanaged>
        B8G8R8A8_UNorm = unchecked((int)87),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_B8G8R8X8_UNORM</unmanaged>
        B8G8R8X8_UNorm = unchecked((int)88),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM</unmanaged>
        R10G10B10_Xr_Bias_A2_UNorm = unchecked((int)89),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_B8G8R8A8_TYPELESS</unmanaged>
        B8G8R8A8_Typeless = unchecked((int)90),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_B8G8R8A8_UNORM_SRGB</unmanaged>
        B8G8R8A8_UNorm_SRgb = unchecked((int)91),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_B8G8R8X8_TYPELESS</unmanaged>
        B8G8R8X8_Typeless = unchecked((int)92),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_B8G8R8X8_UNORM_SRGB</unmanaged>
        B8G8R8X8_UNorm_SRgb = unchecked((int)93),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC6H_TYPELESS</unmanaged>
        BC6H_Typeless = unchecked((int)94),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC6H_UF16</unmanaged>
        BC6H_Uf16 = unchecked((int)95),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC6H_SF16</unmanaged>
        BC6H_Sf16 = unchecked((int)96),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC7_TYPELESS</unmanaged>
        BC7_Typeless = unchecked((int)97),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC7_UNORM</unmanaged>
        BC7_UNorm = unchecked((int)98),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <unmanaged>DXGI_FORMAT_BC7_UNORM_SRGB</unmanaged>
        BC7_UNorm_SRgb = unchecked((int)99),			
    }
}
