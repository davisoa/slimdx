<#@ template debug="true" language="C#" hostspecific="True"  #>
<#@ output encoding="ASCII" extension=".cs" #>
<#@ assembly name="SlimDX.Generator.exe" #>
<#@ assembly name="SlimDX.XIDL.dll" #>
<#@ import namespace="SlimDX.Generator" #>
<#@ parameter name="Namespace" type="SlimDX.Generator.CSharpNamespace" #>
// Copyright (c) 2007-2010 SlimDX Group
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     Enums for <#= Namespace.Name #> namespace.
//     This code was generated by a tool.
//     Date : <#=  DateTime.Now #>
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;

namespace <#= Namespace.Name #> {

<#
foreach (var sharpEnum in Namespace.Enums)
{
#>
    
<#	
	foreach (var docItem in sharpEnum.DocItems) {
#>
    /// <#= docItem #>	
<#			
	}	
#>
    /// <unmanaged><#= sharpEnum.CppElementName #></unmanaged>
<#
	if (sharpEnum.IsFlag) {#>
    [Flags]
<#  }#>
    <#= sharpEnum.VisibilityName #>enum <#= sharpEnum.Name #> : <#= sharpEnum.TypeName #> {	
<#
	foreach (var sharpEnumItem in sharpEnum.EnumItems) {				
#>
        
<#	
		foreach (var docItem in sharpEnumItem.DocItems) {
#>
        /// <#= docItem #>	
<#			
		}
#>
        /// <unmanaged><#= sharpEnumItem.CppElementName #></unmanaged>
<#
		if (string.IsNullOrEmpty(sharpEnumItem.Value)) {
#>
        <#= sharpEnumItem.Name #>,
<#		}
		else {
#>
        <#= sharpEnumItem.Name #> = unchecked((<#= sharpEnum.TypeName #>)<#= sharpEnumItem.Value#>),			
<#
		}
	}	
#>
    }
<#
}#>
}
<#+
#>