Samples
	* Fixed the MiniTri10 sample to not use the console subsystem.
	* Changed the sample framework to check for fullscreen DXGI swap chain before disposing.
	* Removed unused testing code from SimpleModel10.

Math
	* Added an overload of Ray.Intersects that returns the barycentric hit coordinates.

Direct2D
	* Added constructors for Bitmap that allow construction via DXGI shared surfaces.

Direct3D 9
	* Fixed a memory in Utilities.ReadRange that affected many BaseMesh methods.
	* Fixed a typo in the caps structure that filled VolumeTextureFilterCaps with the wrong value.
	* Fixed memory issue in Include interface.
	* Changed AnimationOutput to be a reference type, and pinned the memory to receive animation updates.
	* Added an overload to AnimationController.RegisterAnimationOutput to take a Frame instead.
	
Direct3D 10
	* Added missing creation method overloads to Effect.
	* Added missing Get/SetRawValue methods to EffectVariable.
	* Added ResourceOptionFlags.GdiCompatible and ResourceOptionFlags.KeyedMutex.
	* Added Resource.SaveTextureToFile, which allows for saving a texture without knowing its concrete type.
	* Fixed a COM reference leak in Device.OpenSharedResource.

Direct3D 11
	* Fixed a COM reference leak in Device.OpenSharedResource.
	* Added IsDataAvailable to the DeviceContext interface.
	* Added Resource.SaveTextureToFile, which allows for saving a texture without knowing its concrete type.

DXGI
	* Changed SwapChain.Dispose to throw if the adapter is in fullscreen mode. This prevents a crash inside DXGI.
	* Added IsFullScreen property to SwapChain as a convenient alternative to GetFullScreenState.
	* Fixed a null reference check in Output.GetClosestMatchingMode.
	* Added Surface1 support.
	
D3DCompiler
	* Fixed memory issue in Include interface.
	
DirectWrite
	* Changed TextLayout to inherit from TextFormat.
	
DirectInput
	* Fixed a typo in Device.GetObjectInfoById that caused it to return info by usage instead.
	* Changed ObjectProperties.LogicalRange and ObjectProperties.PhysicalRange to return actual ranges instead of integers.

Windows
	* Added functionality to the RenderForm class to add sizing and monitor change events.